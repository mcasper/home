version: "3"
services:
  router:
    image: mcasper/home-router:${TAG}
    network_mode: bridge
    links:
       - scoreboard-frontend
       - home
       - recipes
       - budget
       - auth
    ports:
      - "9901:9901"
      - "80:9000"

  db:
    image: postgres:11
    network_mode: bridge
    restart: always
    env_file: .postgres.env
    volumes:
      - /data:/var/lib/postgresql/data

  home:
    image: mcasper/home-home:${TAG}
    command: nginx -g "daemon off;"
    restart: on-failure
    network_mode: bridge
    env_file: ./.env

  scoreboard-frontend:
    image: mcasper/home-scoreboard-frontend:${TAG}
    command: nginx -g "daemon off;"
    restart: on-failure
    network_mode: bridge
    env_file: ./.env

  auth:
    image: mcasper/home-auth:${TAG}
    command: /go/src/auth/auth
    restart: on-failure
    network_mode: bridge
    volumes:
      - "./keys:/keys"
    env_file: ./.env
    environment:
      PORT: 80
      JWT_KEY_PATH: "/keys/key.pem"
      GOOGLE_CREDS_PATH: "/keys/google_creds.json"

  recipes:
    image: mcasper/home-recipes:${TAG}
    command: bundle exec rails s -b 0.0.0.0 -p 80
    restart: on-failure
    network_mode: bridge
    volumes:
      - "./keys:/keys"
    links:
      - db
    env_file: ./.env
    environment:
      RAILS_LOG_TO_STDOUT: "true"
      RAILS_SERVE_STATIC_FILES: "true"
      JWT_KEY_PATH: "/keys/key.pem"

  budget:
    image: mcasper/home-budget:${TAG}
    command: mix phx.server
    restart: on-failure
    network_mode: bridge
    volumes:
      - "./keys:/keys"
    links:
      - db
    env_file: ./.env
    environment:
      JWT_PUBLIC_KEY_PATH: "/keys/key.pem"

  movies:
    image: mcasper/home-movies:${TAG}
    command: cd /go/src/movies && revel run /go/src/movies prod
    restart: on-failure
    network_mode: bridge
    links:
      - db
    env_file: ./.env
    environment:
      JWT_PUBLIC_KEY_PATH: "/keys/key.pem"

volumes:
  keys:
